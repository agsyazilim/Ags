@using Ags.Data.Core
@using Ags.Data.Domain
@using Ags.Services.Customers
@using Ags.Services.Seo
@using Microsoft.AspNetCore.Identity
@model NewsItemModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject StoreInformationSettings StoreInformationSettings
@inject ICustomerService CustomerService
@inject IUrlRecordService UrlRecordService
@inject IWebHelper WebHelper

@{
    ViewBag.Title = Model.MetaTitle ?? Model.Title;
    ViewBag.MetaDescription = Model.MetaDescription;
    ViewBag.MetaKeywords = Model.MetaKeywords;
    Layout = "_BlogColumn";

}

@section banner{
    <div class="page-banner-section section mt-30 mb-30" data-title="NewsIndex">
        <div class="container">
            <div class="row row-1">
                <div class="col-12">
                    <div class="page-banner" style="background-image: url(@string.Format("/images/uploaded/categori/{0}.jpg",Model.CategorySeName)">
                        <h2>@Model.Title</h2>
                        <ol class="page-breadcrumb">
                            <li><a href="#">Anasayfa</a></li>
                            <li class="active">@Model.SeName</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Slider{
    @if (Model.PictureModels.Any())
    {
        <div class="popular-section section bg-blue-gradient mt-50 pb-50" data-title="NewsIndex">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="popular-post-slider">
                            @foreach (var item in Model.PictureModels)
                            {
                                <div class="post post-overlay">
                                    <div class="post-wrap">
                                        <a class="image" href="#">
                                            <img src="@item.ThumbImageUrl" alt="post">
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

}
<div class="single-blog mb-50" data-title="NewsIndex">
    <div class="blog-wrap">
        <div class="meta fix">
            <a href="#" class="meta-item category ">@Model.CategoryName</a>
            @*<a href="#" class="meta-item author">
                <img src="@Model.PictureUrl" alt="post author">
                @Model.CustomerName
            </a>*@
            <span class="meta-item date"><i class="fa fa-clock-o"></i>@Model.CreatedOn.ToShortDateString()</span>
            <a href="#" class="meta-item comments"><i class="fa fa-comments"></i>@Model.NumberOfComments</a>
            <span class="meta-item view"><i class="fa fa-eye"></i>@Model.NumberOfRead</span>
        </div>
        <h3 class="title">@Model.Title</h3>
        <div class="image"><img src="@Model.PictureUrl" alt="post"></div>
        <div class="content">@Html.Raw(Model.Full)</div>
        <div class="tags-social float-left">
            <div class="blog-social float-right">
                <div class="addthis_inline_share_toolbox"></div>
            </div>
        </div>
    </div>
</div>
@if (Model.Comments.Count > 0 & Model.AllowComments)
{<div class="post-author fix mb-50">
        @foreach (var item in Model.Comments)
        {
            @*<div class="image float-left">
                <img src="/images/default-avatar.jpg" alt="post-author">
            </div>*@
            <div class="content fix">
                @*<h5><a href="#">@item.CustomerName</a></h5>*@
                <p>@item.CommentTitle</p>
                <p>@item.CommentText</p>
                <div class="social">
                    <a href="#">@item.CreatedOn.ToShortDateString()</a>
                </div>
            </div>
        }
    </div>
}
<div class="post-block-wrapper" data-title="NewsIndex">
    <div class="head">
        <h4 class="title">Yorum Ekleyin</h4>
    </div>
    <div class="body">
        <div class="post-comment-form">
            @if (Model.AllowComments)
            {
                <div class="notifications">
                    <div asp-validation-summary="ModelOnly" class="message-error"></div>
                    @{
                        var result = TempData["ags.news.addcomment.result"] as string;
                    }
                    @if (!string.IsNullOrEmpty(result))
                    {
                        <div class="result">@result</div>
                    }
                </div>
                <form asp-controller="News" asp-action="NewsCommentAdd" method="post" class="row">
                    <div class="col-12 mb-20">
                        <label asp-for="AddNewComment.CommentTitle" asp-postfix=":"></label>
                        <input asp-for="AddNewComment.CommentTitle" class="enter-comment-title" />
                        <span asp-validation-for="AddNewComment.CommentTitle"></span>
                    </div>
                    <div class="col-12 mb-20">
                        <label asp-for="AddNewComment.CommentText" asp-postfix=":"></label>
                        <textarea asp-for="AddNewComment.CommentText" class="enter-comment-text"></textarea>
                        <span asp-validation-for="AddNewComment.CommentText"></span>
                    </div>
                    <div class="col-12">
                        <input type="submit" value="Gönder" id="newsComment">
                    </div>
                    <input type="hidden" name="newsItemId" value="@Model.Id" />
                </form>



            }
        </div>
    </div>
</div>
@section Right{
    @await Component.InvokeAsync("RightSocialMedia").ConfigureAwait(false)
}
@section PostSectionLeft{
    @await Component.InvokeAsync("PostSectionLeft").ConfigureAwait(false)
}
@section PostSectionRigth {
    @await Component.InvokeAsync("PostSectionRigth").ConfigureAwait(false)
}
@section scripts
{
    <partial name="_ValidationScriptsPartial"/>    
}

